import React from "react";
import { Card, CardContent, CardHeader, CardTitle } from "@/components/ui/card";
import { Progress } from "@/components/ui/progress";

interface VulnerabilityMetricCardProps {
  title: string;
  value: number;
  description?: string;
  colorScheme: "danger" | "warning" | "success" | "info";
  icon?: React.ReactNode;
  showProgress?: boolean;
}

export function VulnerabilityMetricCard({
  title,
  value,
  description,
  colorScheme,
  icon,
  showProgress = true,
}: VulnerabilityMetricCardProps) {
  const formattedValue = (value * 100).toFixed(1) + "%";
  
  // Define color schemes based on type
  const colorClasses = {
    danger: {
      bg: "bg-red-50",
      text: "text-red-700",
      progress: "bg-red-500",
    },
    warning: {
      bg: "bg-amber-50",
      text: "text-amber-700",
      progress: "bg-amber-500",
    },
    success: {
      bg: "bg-emerald-50",
      text: "text-emerald-700",
      progress: "bg-emerald-500",
    },
    info: {
      bg: "bg-blue-50",
      text: "text-blue-700",
      progress: "bg-blue-500",
    },
  };
  
  const { bg, text, progress } = colorClasses[colorScheme];
  
  return (
    <Card className={`${bg} border-none shadow-sm`}>
      <CardHeader className="pb-2">
        <CardTitle className="text-sm font-medium">{title}</CardTitle>
      </CardHeader>
      <CardContent>
        <div className="flex items-center justify-between">
          <div className="space-y-1">
            <p className={`text-2xl font-bold ${text}`}>{formattedValue}</p>
            {description && (
              <p className="text-xs text-slate-500">{description}</p>
            )}
          </div>
          {icon && <div className={`text-lg ${text}`}>{icon}</div>}
        </div>
        
        {showProgress && (
          <Progress 
            value={value * 100} 
            max={100}
            className={`mt-4 h-2 ${progress}`}
          />
        )}
      </CardContent>
    </Card>
  );
} 